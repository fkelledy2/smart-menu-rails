<%# Example of how to update restaurant views to use the new JavaScript system %>

<% content_for :title, "Restaurants" %>

<%# Add modules data attribute to body - this goes in layout %>
<%# <body data-modules="<%= page_modules %>"> %>

<div class="container-fluid">
  <div class="row">
    <div class="col-12">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Restaurants</h1>
        <%= link_to "New Restaurant", new_restaurant_path, class: "btn btn-primary" %>
      </div>

      <%# Statistics container - will be populated by JavaScript %>
      <div class="table-stats mb-3">
        <div class="row">
          <div class="col-md-6">
            <div class="stat-item">
              <span class="stat-label">Loading...</span>
            </div>
          </div>
        </div>
      </div>

      <%# New table using helper - automatically configured %>
      <%= restaurant_table_tag %>

      <%# Alternative manual configuration %>
      <%# 
      <table id="restaurant-table" 
             class="table table-striped table-hover"
             <%= table_data_attributes('restaurant', {
               ajax_url: restaurants_path(format: :json),
               pagination_size: 10
             }).map { |k, v| "#{k}=\"#{v}\"" }.join(' ').html_safe %>>
      </table>
      %>
    </div>
  </div>
</div>

<%# Restaurant form example %>
<% if @restaurant %>
  <div class="modal fade" id="restaurantModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">
            <%= @restaurant.persisted? ? "Edit Restaurant" : "New Restaurant" %>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        
        <div class="modal-body">
          <%# New form using helper - automatically configured %>
          <%= restaurant_form_with @restaurant, 
                                  auto_save: true, 
                                  validate: true,
                                  local: false do |form| %>
            
            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :name, class: "form-label" %>
                  <%= form.text_field :name, 
                                     class: "form-control",
                                     data: { 'validate-rules': { required: true, minLength: 2 }.to_json } %>
                </div>
              </div>
              
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :status, class: "form-label" %>
                  <%# Uses helper for automatic TomSelect initialization %>
                  <%= status_select form, :status %>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-8">
                <div class="mb-3">
                  <%= form.label :address1, "Address", class: "form-label" %>
                  <%= form.text_field :address1, 
                                     class: "form-control",
                                     data: { 'validate-rules': { required: true, minLength: 5 }.to_json } %>
                </div>
              </div>
              
              <div class="col-md-4">
                <div class="mb-3">
                  <%= form.label :city, class: "form-label" %>
                  <%= form.text_field :city, 
                                     class: "form-control",
                                     data: { 'validate-rules': { required: true }.to_json } %>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :country, class: "form-label" %>
                  <%# Uses helper for searchable country select %>
                  <%= country_select form, :country %>
                </div>
              </div>
              
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :currency, class: "form-label" %>
                  <%# Uses helper for searchable currency select %>
                  <%= currency_select form, :currency %>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :email, class: "form-label" %>
                  <%= form.email_field :email, 
                                      class: "form-control",
                                      data: { 'validate-rules': { email: true }.to_json } %>
                </div>
              </div>
              
              <div class="col-md-6">
                <div class="mb-3">
                  <%= form.label :phone, class: "form-label" %>
                  <%= form.telephone_field :phone, 
                                          class: "form-control",
                                          data: { 'validate-rules': { 
                                            pattern: '^[+]?[0-9\\s\\-\\(\\)]+$',
                                            patternMessage: 'Please enter a valid phone number'
                                          }.to_json } %>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <%= form.label :description, class: "form-label" %>
              <%= form.text_area :description, 
                                class: "form-control",
                                rows: 3,
                                data: { 'validate-rules': { maxLength: 500 }.to_json } %>
            </div>

            <div class="row">
              <div class="col-md-4">
                <div class="mb-3">
                  <%= form.label :displayImages, "Display Images", class: "form-label" %>
                  <%= form.select :displayImages,
                                 options_for_select([
                                   ['Yes', true],
                                   ['No', false]
                                 ], form.object.displayImages),
                                 { prompt: 'Select option...' },
                                 select_data_attributes(:default) %>
                </div>
              </div>
              
              <div class="col-md-4">
                <div class="mb-3">
                  <%= form.label :allowOrdering, "Allow Ordering", class: "form-label" %>
                  <%= form.select :allowOrdering,
                                 options_for_select([
                                   ['Yes', true],
                                   ['No', false]
                                 ], form.object.allowOrdering),
                                 { prompt: 'Select option...' },
                                 select_data_attributes(:default) %>
                </div>
              </div>
              
              <div class="col-md-4">
                <div class="mb-3">
                  <%= form.label :inventoryTracking, "Inventory Tracking", class: "form-label" %>
                  <%= form.select :inventoryTracking,
                                 options_for_select([
                                   ['Yes', true],
                                   ['No', false]
                                 ], form.object.inventoryTracking),
                                 { prompt: 'Select option...' },
                                 select_data_attributes(:default) %>
                </div>
              </div>
            </div>

            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <%= form.submit class: "btn btn-primary" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<%# QR Code display example %>
<% if @restaurant&.persisted? %>
  <div class="mt-4">
    <h3>QR Code</h3>
    <div class="qr-container">
      <p>Restaurant QR Code for: <span class="qrSlug"><%= @restaurant.slug %></span></p>
      <%# QR code will be generated automatically by RestaurantModule %>
      <button class="btn btn-outline-primary qr-download-btn" 
              data-qr-slug="<%= @restaurant.slug %>">
        Download QR Code
      </button>
    </div>
  </div>

  <%# Hidden data for QR generation %>
  <div id="qrHost" style="display: none;"><%= request.host %></div>
  <div id="qrIcon" style="display: none;"><%= asset_path('qr-icon.png') %></div>
<% end %>

<%# Related tables example %>
<% if @restaurant&.persisted? %>
  <div class="mt-5">
    <ul class="nav nav-tabs" id="restaurantTabs" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="menus-tab" data-bs-toggle="tab" data-bs-target="#menus" type="button">
          Menus
        </button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="employees-tab" data-bs-toggle="tab" data-bs-target="#employees" type="button">
          Employees
        </button>
      </li>
    </ul>
    
    <div class="tab-content" id="restaurantTabsContent">
      <div class="tab-pane fade show active" id="menus" role="tabpanel">
        <div class="p-3">
          <%# Menu table using helper %>
          <%= menu_table_tag @restaurant.id %>
        </div>
      </div>
      
      <div class="tab-pane fade" id="employees" role="tabpanel">
        <div class="p-3">
          <%# Employee table using helper %>
          <%= employee_table_tag @restaurant.id %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<%# Notification container %>
<%= notification_container %>

<%# 
MIGRATION NOTES:

1. REMOVE these old JavaScript includes:
   <%# javascript_include_tag 'restaurants' %>

2. ADD to application layout:
   <body data-modules="<%= page_modules %>">

3. UPDATE application layout to use:
   <%= javascript_system_tags %>
   
   Instead of:
   <%= javascript_importmap_tags %>

4. The RestaurantModule will automatically:
   - Initialize all TomSelect dropdowns
   - Set up the restaurant table with proper config
   - Handle form submissions and validation
   - Generate QR codes
   - Manage related tables
   - Provide auto-save functionality
   - Handle all event binding

5. No manual JavaScript initialization needed!
%>
